import numpy as npfrom sklearn.datasets import load_digitsfrom sklearn.metrics import confusion_matrix, classification_reportfrom sklearn.preprocessing import LabelBinarizerfrom test import NeuralNetworkfrom sklearn.model_selection import train_test_splitdigits = load_digits()X = digits.datay = digits.target#将X数据集中的数据进行标准化，转化到0-1之间X -= X.min()X /= X.max()nn = NeuralNetwork([64,100,10],'logistic')X_train, X_test, y_train, y_test = train_test_split(X,y)labels_train = LabelBinarizer().fit_transform(y_train)labels_test = LabelBinarizer().fit_transform(y_test)print("start fitting")nn.fit(X_train,labels_train,epochs=600000)predictions = []for i in range(X_test.shape[0]):    o = nn.predict(X_test[i])    predictions.append(np.argmax(o))print(confusion_matrix(y_test,predictions))print(classification_report(y_test,predictions))