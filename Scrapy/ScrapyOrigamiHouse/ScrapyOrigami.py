# 提取网页中的链接# 目标#   提取www.origamihouse.jp中的书籍信息和图片#   保存到本地的文件夹中__author__ = "fanxin.hit@gmail.com"import reimport urllibfrom lxml import htmlimport requestsimport lxmlimport osfrom urllib import error#对文件名变化，得到大的图片def ChangeImageName(imagename):    # 要过滤掉下面这些文件名，这些都是小图    # batou.gif    # s_DSC01025.jpg    # joisel_part1_s.jpg    # santaclaus_s.jpg    if re.findall("gif", imagename):        # print(imagename)        return imagename.replace('gif','jpg')    if re.findall("_s", imagename):        # print(imagename)        return imagename.replace('_s','')    if re.findall("s_", imagename):        # print(imagename)        return imagename.replace('s_','')    #其他情况    return imagenamef = open('./result.csv','r')# 去掉重复的行file = set(f)# print(f.read())print(file)# lines = file.readlines()for line in file:    # print('line is ',line)    result = re.match('https:\/\/www\.origamihouse\.jp\/book\/original\/[^oh].*', line)    # print('line is ',result)    # result = re.match('https:\/\/www\.origamihouse\.jp\/book\/original.*', line)    # print(result)    if result:        # 获取新书的url地址        print('新的页面: ', line.split(',')[0])        new_page = line.split(',')[0]        # New Page is:  https://www.origamihouse.jp/book/original/nishikawa/nishikawa.html        url_first_position = new_page.rfind('/')        new_url_first = new_page[:url_first_position]        # https://www.origamihouse.jp/book/original/nishikawa        # print(new_url_first)        # 从新的url里获取图片        response = urllib.request.urlopen(new_page)        result = response.read().decode('Shift_JIS')        html = lxml.html.fromstring(str(result))        title = html.xpath('//tr/td')        # //表示子节点或者孙节点        title = html.xpath('//div[3]/table[1]//tr/td[1]//img')        images = html.xpath('//a//img')        path = './books'        isExist = os.path.exists(path)        if not isExist:            os.mkdir(path)            print('创建成功')        try:            print('获取到的属性:', title[0].attrib)            book_name = title[0].get('alt')            if not book_name:                book_name = '其他'            print('书籍名称:',book_name )            print('获取到的链接内容: ', title[0].get('src'))            print('主图片的链接: ', new_url_first+'/'+title[0].get('src'))            #按照书名建立文件夹            book_path = path+'/'+book_name            isExist = os.path.exists(book_path)            if not isExist:                os.mkdir(book_path)                print('创建成功')            print('其他图片')            for image in images:                # print(image.attrib)                # 查找不以..开头的内容                # 查找不以.开头的内容                if re.findall(r"^[^\.][^https]", image.get('src')):                    # print(image.get('src'))                    new_url_second = ChangeImageName(image.get('src'))                    new_url = new_url_first+'/'+new_url_second                    print('链接： ',new_url)                    #获取文件并保存                    urllib.request.urlretrieve(new_url,book_path+'/'+new_url_second)            print('----------------------------------------')        except IndexError:            pass        except error.HTTPError:            pass        f.close()